// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_DAW_Cinemavazut.ContextModels;

#nullable disable

namespace Proiect_DAW_Cinemavazut.Migrations
{
    [DbContext(typeof(CinemavazutContext))]
    partial class CinemavazutContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Achievements", b =>
                {
                    b.Property<int>("id_achievement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_achievement"));

                    b.Property<int>("categorie_ach")
                        .HasColumnType("int");

                    b.Property<string>("denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prag")
                        .HasColumnType("int");

                    b.HasKey("id_achievement");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Categorii_filme", b =>
                {
                    b.Property<int>("id_categorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categorie"));

                    b.Property<string>("denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_categorie");

                    b.ToTable("Categorii_filme");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.FilmCategorie", b =>
                {
                    b.Property<int>("id_filmcategorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_filmcategorie"));

                    b.Property<int>("id_categorie")
                        .HasColumnType("int");

                    b.Property<int>("id_film")
                        .HasColumnType("int");

                    b.HasKey("id_filmcategorie");

                    b.ToTable("FilmCategorie");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Filme", b =>
                {
                    b.Property<int>("id_film")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_film"));

                    b.Property<int?>("an_lansare")
                        .HasColumnType("int");

                    b.Property<string>("descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("durata")
                        .HasColumnType("int");

                    b.Property<string>("studio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titlu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_film");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Filme_urmatoare", b =>
                {
                    b.Property<int>("id_urmatoare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_urmatoare"));

                    b.Property<string>("comentariu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_film")
                        .HasColumnType("int");

                    b.Property<int>("id_utilizator")
                        .HasColumnType("int");

                    b.HasKey("id_urmatoare");

                    b.ToTable("Filme_urmatoare");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Filme_vazute", b =>
                {
                    b.Property<int>("id_vazute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_vazute"));

                    b.Property<string>("comentariu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("favorit")
                        .HasColumnType("bit");

                    b.Property<int>("id_film")
                        .HasColumnType("int");

                    b.Property<int>("id_utilizator")
                        .HasColumnType("int");

                    b.HasKey("id_vazute");

                    b.ToTable("Filme_vazute");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Quizuri", b =>
                {
                    b.Property<int>("id_quiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quiz"));

                    b.Property<int>("id_film")
                        .HasColumnType("int");

                    b.Property<string>("intrebare1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("intrebare2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("intrebare3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("intrebare4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("intrebare5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns1_corect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns1_gresit1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns1_gresit2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns2_corect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns2_gresit1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns2_gresit2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns3_corect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns3_gresit1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns3_gresit2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns4_corect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns4_gresit1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns4_gresit2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns5_corect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns5_gresit1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raspuns5_gresit2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_quiz");

                    b.ToTable("Quizuri");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Quizuri_trecute", b =>
                {
                    b.Property<int>("id_quizuri_trecute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quizuri_trecute"));

                    b.Property<int>("id_quiz")
                        .HasColumnType("int");

                    b.Property<int>("id_utilizator")
                        .HasColumnType("int");

                    b.HasKey("id_quizuri_trecute");

                    b.ToTable("Quizuri_trecute");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Recenzii", b =>
                {
                    b.Property<int>("id_recenzie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_recenzie"));

                    b.Property<string>("comentariu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_film")
                        .HasColumnType("int");

                    b.Property<int>("id_utilizator")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("titlu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_recenzie");

                    b.ToTable("Recenzii");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.UtilizatorAchievement", b =>
                {
                    b.Property<int>("id_utilizatorachievement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_utilizatorachievement"));

                    b.Property<int>("id_achievement")
                        .HasColumnType("int");

                    b.Property<int>("id_utilizator")
                        .HasColumnType("int");

                    b.HasKey("id_utilizatorachievement");

                    b.ToTable("UtilizatorAchievement");
                });

            modelBuilder.Entity("Proiect_DAW_Cinemavazut.Models.Utilizatori", b =>
                {
                    b.Property<int>("id_utilizator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_utilizator"));

                    b.Property<DateTime>("data_inscriere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_nastere")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rol")
                        .HasColumnType("int");

                    b.Property<int>("scor")
                        .HasColumnType("int");

                    b.Property<string>("telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_utilizator");

                    b.ToTable("Utilizatori");
                });
#pragma warning restore 612, 618
        }
    }
}
